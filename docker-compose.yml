services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: codereviewer_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: adminpass
      MONGO_INITDB_DATABASE: codereviewer
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - codereviewer_network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh --quiet
      interval: 30s
      timeout: 10s
      retries: 3

  # FastAPI Backend
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: codereviewer_backend
    restart: unless-stopped
    environment:
      MONGODB_URI: mongodb://admin:adminpass@mongodb:27017/codereviewer?authSource=admin
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      FRONTEND_URL: http://localhost:3000
      BACKEND_URL: http://localhost:8000
      RATE_LIMIT_PER_HOUR: 50
      ENVIRONMENT: development
    ports:
      - "8000:8000"
    networks:
      - codereviewer_network
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/api/health')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # React Frontend
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: codereviewer_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - codereviewer_network
    depends_on:
      - backend

  # MongoDB Admin Interface (opcional)
  mongo-express:
    image: mongo-express:latest
    container_name: codereviewer_mongo_express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: adminpass
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: adminpass
    ports:
      - "8081:8081"
    networks:
      - codereviewer_network
    depends_on:
      mongodb:
        condition: service_healthy
    profiles:
      - tools

networks:
  codereviewer_network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
